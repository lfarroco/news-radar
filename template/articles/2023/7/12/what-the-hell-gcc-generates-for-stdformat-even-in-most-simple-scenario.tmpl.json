{"layout":"article.njk","title":"What the hell gcc generates for std::format? Even in most simple scenario","date":"2023-07-12T03:00:00.000Z","formattedDate":"2023-7-12","source_link":"https://godbolt.org/z/eKzzExcbW","tags":["c"],"topics":[{"name":"C++","slug":"c"}],"content":"<p>The article explores the unexpected behavior of the gcc compiler when generating code for the <code>std::format</code> function. The author highlights a simple scenario where the generated code differs significantly from what is expected. This serves as a reminder for developers to be aware of potential compiler quirks and to thoroughly test their code across different compilers and platforms.</p>\n<p>In the context of this article, it is important for developers to stay informed about the latest updates and improvements in compiler technology. By keeping up with the latest news and advancements, developers can make informed decisions about which compilers to use and how to optimize their code for performance and reliability.</p>\n<p>To illustrate the issue, the author provides a code snippet that demonstrates the unexpected behavior. By examining the generated assembly code, developers can gain insights into the inner workings of the compiler and potentially find workarounds or optimizations.</p>\n<p>Overall, this article serves as a valuable resource for developers who want to stay informed about the intricacies of compiler behavior and ensure their code performs as expected across different platforms and compilers.</p>\n"}