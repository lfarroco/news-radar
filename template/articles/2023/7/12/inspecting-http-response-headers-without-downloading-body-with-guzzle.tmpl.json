{"layout":"article.njk","title":"Inspecting HTTP Response Headers Without Downloading Body with Guzzle","date":"2023-07-12T03:00:00.000Z","formattedDate":"2023-7-12","source_link":"https://chriswhite.is/coding/inspecting-http-response-headers-without-downloading-body-with-guzzle/","tags":["php"],"topics":[{"name":"PHP","slug":"php"}],"content":"<p>In a recent project, the author needed to inspect the HTTP response headers of a large file download to determine if it was necessary to download the file. They specifically wanted to check the ETag header to see if it had changed since a previous download. However, simply issuing a HEAD request to the URL didn&#39;t work in this case, as some of the URLs were signed S3 URLs that only allowed GET requests.</p>\n<p>To solve this problem, the author turned to Guzzle, a popular PHP HTTP client. They discovered the <code>on_headers</code> request option, which allows you to inspect the response headers before the body of the response is downloaded. By throwing a custom exception inside the <code>on_headers</code> callable, they were able to abort the downloading of the response body.</p>\n<p>Here&#39;s an example of how the <code>getHeaders()</code> function was implemented:</p>\n<pre><code class=\"language-php\">use GuzzleHttp\\Client;\nuse GuzzleHttp\\Exception\\RequestException;\n\nfunction getHeaders($url)\n{\n    $client = new Client();\n    \n    try {\n        $responseWithOnlyHeaders = $client-&gt;get($url, [\n            &#39;on_headers&#39; =&gt; function ($response) {\n                // Save the response with only headers for later use\n                $this-&gt;responseWithOnlyHeaders = $response;\n                \n                // Abort the downloading of the response body\n                throw new BlockResponseBodyDownload();\n            }\n        ]);\n    } catch (RequestException $e) {\n        // Check if the exception is our custom exception\n        if ($e-&gt;getPrevious() instanceof BlockResponseBodyDownload) {\n            // Ignore the exception\n        } else {\n            // Re-throw the exception\n            throw $e;\n        }\n    }\n    \n    // Continue with the rest of the code...\n}\n</code></pre>\n<p>Note that the <code>BlockResponseBodyDownload</code> exception is a custom exception used specifically for this purpose. By checking the previous exception in the <code>RequestException</code>, the author was able to differentiate between their custom exception and Guzzle&#39;s native exceptions.</p>\n<p>One caveat the author discovered is that Guzzle no longer automatically follows redirects when using <code>on_headers</code>. To handle redirects, they had to manually implement the redirect logic.</p>\n<p>This solution allowed the author to inspect the response headers without downloading the response body, saving time and resources when dealing with large file downloads.</p>\n"}