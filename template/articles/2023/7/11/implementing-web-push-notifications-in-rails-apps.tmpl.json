{"layout":"article.njk","title":"Implementing Web Push Notifications in Rails Apps","date":"2023-07-11T03:00:00.000Z","formattedDate":"2023-7-11","source_link":"https://fly.io/ruby-dispatch/push-to-subscribe/","tags":["ruby"],"topics":[{"name":"Ruby","slug":"ruby"}],"content":"<p>Web push notifications have become a popular way for applications to engage with their audience and clients. With the recent addition of Safari to the list of supported browsers, now is a great time to consider implementing the Push API in your Rails applications.</p>\n<p>In this article, the author takes you through the process of creating a complete Rails 7 application with Web Push. They demonstrate how to add Web Push to your existing Rails application using the web-push gem and a service worker.</p>\n<p>To get started, the author provides step-by-step instructions for setting up the necessary scaffolding and adding VAPID keys to your Rails credentials. They also show you how to add routes and create a service worker that handles push requests and displays notifications.</p>\n<p>The article then covers how to send notifications when a record is saved in the database. This is achieved by using the after_save Active Record Callback in the Notification model. The author provides code snippets that demonstrate how to iterate over subscriptions and call the WebPush.payload_send method.</p>\n<p>Finally, the article discusses making changes to the user interface. The author suggests adding a &quot;Create Subscription&quot; button to the users page, which triggers a Stimulus controller. This controller handles the subscription creation process.</p>\n<p>Overall, this article provides a comprehensive guide to implementing Web Push notifications in Rails apps. It covers everything from setup to user interface changes, making it a valuable resource for developers looking to engage their audience with push notifications.</p>\n"}