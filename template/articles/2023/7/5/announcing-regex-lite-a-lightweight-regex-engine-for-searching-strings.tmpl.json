{"layout":"article.njk","title":"Announcing regex-lite: A Lightweight Regex Engine for Searching Strings","date":"2023-07-05T03:00:00.000Z","formattedDate":"2023-7-5","source_link":"https://docs.rs/regex-lite/0.1.*/","tags":["rust"],"topics":[{"name":"Rust","slug":"rust"}],"content":"<p>The regex-lite crate provides a lightweight regex engine for searching strings. It offers a syntax that is nearly identical to the popular regex crate. However, regex-lite prioritizes smaller binary sizes and shorter Rust compile times over performance and functionality. As a result, regex searches in this crate may be slower compared to the regex crate. Additionally, regex-lite has limited Unicode support, only matching codepoint by codepoint.</p>\n<p>To use regex-lite, simply add it as a dependency in your project&#39;s Cargo.toml file. Here&#39;s an example of how to use regex-lite in a Rust project:</p>\n<ol>\n<li>Create a new Rust project:</li>\n</ol>\n<pre><code>$ cargo new my_project\n$ cd my_project\n</code></pre>\n<ol start=\"2\">\n<li>Add regex-lite as a dependency:</li>\n</ol>\n<pre><code># Cargo.toml\n[dependencies]\nregex-lite = &quot;0.1&quot;\n</code></pre>\n<ol start=\"3\">\n<li>Edit src/main.rs with the following code:</li>\n</ol>\n<pre><code class=\"language-rust\">use regex_lite::Regex;\n\nfn main() {\n    let haystack = &quot;Hello, world!&quot;;\n    let pattern = r&quot;world&quot;;\n\n    let re = Regex::new(pattern).unwrap();\n    if let Some(captures) = re.captures(haystack) {\n        let match_str = captures.get(0).unwrap().as_str();\n        println!(&quot;Found match: {}&quot;, match_str);\n    } else {\n        println!(&quot;No match found&quot;);\n    }\n}\n</code></pre>\n<ol start=\"4\">\n<li>Run the program:</li>\n</ol>\n<pre><code>$ cargo run\n</code></pre>\n<p>This example demonstrates a basic regex search using regex-lite. For more examples and detailed API documentation, refer to the official documentation.</p>\n"}