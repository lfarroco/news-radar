{"layout":"article.njk","title":"Should the Go project continue to import GitHub PRs?","date":"2023-07-05T03:00:00.000Z","formattedDate":"2023-7-5","source_link":"https://github.com/golang/go/discussions/61182","tags":["go"],"topics":[{"name":"Go","slug":"go"}],"content":"<p>The article discusses the possibility of no longer accepting GitHub PRs for the Go repositories and reducing the use of GerritBot. The author highlights the issues with the current GitHub workflow, including its lack of effectiveness and the buggy nature of the import workflow. They also mention the difficulty in addressing data model mismatches and the unlikelihood of significant development work on GerritBot in the near future.</p>\n<p>The author suggests reversing the decision made in #18517 and instead closing GitHub PRs with a message directing contributors to the Gerrit workflow in the Contribution Guide.</p>\n<p>While some contributors share their positive experiences with the Gerrit workflow, others argue that the GitHub import feature lowers the barrier for simple drive-by contributions.</p>\n<p>Overall, the article raises the question of whether the Go project should continue importing GitHub PRs or shift to a more streamlined workflow. Developers interested in the Go language and its development process will find this discussion relevant to their work.</p>\n<pre><code class=\"language-go\">package main\n\nimport &quot;fmt&quot;\n\nfunc main() {\n    fmt.Println(&quot;Hello, Go developers!&quot;)\n}\n</code></pre>\n"}