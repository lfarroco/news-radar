{"layout":"article.njk","title":"IntelliJ Rust Changelog #198 - attribute procedural macro expansion is here!","date":"2023-07-10T03:00:00.000Z","formattedDate":"2023-7-10","source_link":"https://intellij-rust.github.io/2023/07/10/changelog-198.html","tags":["rust"],"topics":[{"name":"Rust","slug":"rust"}],"content":"<p>The latest update of IntelliJ Rust brings exciting new features and improvements for developers. One of the highlights is the enabled attribute procedural macro expansion by default. This means that generated items are now suggested in code completion and considered in other code insight features.</p>\n<p>Developers can also benefit from completion improvements, such as suggestions for .slice/.sublist postfix completion, completion for literal suffixes, completion for keys inside TOML dependency specification, and completion for enum variants inside patterns. Additionally, the update includes the ability to detect E0557 error and provide a quick-fix for it, highlight compile_error!() usage as an error, and parse default parameter values.</p>\n<p>Fixes in this update address issues like highlighting E0061 error for impl trait calls, mishighlighting cfg-disabled code in macro calls, and resolving Unresolved Reference false-positives in ruffle project.</p>\n<p>Performance improvements and internal enhancements have also been made, ensuring a smoother and more efficient development experience.</p>\n<p>For a full list of changes, check out the <a href=\"https://example.com/changelog/198\">IntelliJ Rust Changelog #198</a>.</p>\n<p>Stay tuned for more updates and enhancements from IntelliJ Rust, a powerful tool for Rust developers.</p>\n"}