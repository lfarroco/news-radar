{"layout":"article.njk","title":"Migrating a Spring Boot App to a Native Image with GraalVM","date":"2023-07-10T03:00:00.000Z","formattedDate":"2023-7-10","source_link":"https://softwaremill.com/how-to-migrate-a-spring-boot-app-to-a-native-image/","tags":["java"],"topics":[{"name":"Java","slug":"java"}],"content":"<p>In this article, the author explores the process of migrating a Spring Boot application to a native image using GraalVM&#39;s Native Image Support. The author highlights that while there are many articles on this topic, most of them are outdated due to the deprecation of the spring-native module. The article aims to provide a comprehensive guide for migrating a real-world Spring Boot application, rather than a simple hello world program, to a native image. The benefits of running an application as a native image, such as faster startup times and lower memory footprint, are discussed. The author also mentions the drawbacks and pain points that developers may encounter during the migration process. The article then introduces an ideal candidate for migration, a RealWorld application built with Java 17 and Spring Boot 3.0. The application utilizes various Spring Boot modules, such as spring-boot-starter-jpa and spring-boot-starter-security, making it suitable for demonstrating the challenges and solutions of migration. The article concludes by emphasizing the importance of understanding the known limitations of building a Spring Boot application as a native image and provides options for handling unsupported features, such as migrating from log4j2 to logback. Developers interested in migrating their Spring Boot applications to native images will find this article a valuable resource.</p>\n"}