{"layout":"article.njk","title":"webxx: Declarative, composable & fast HTML+CSS components","date":"2023-07-02T03:00:00.000Z","formattedDate":"2023-7-2","source_link":"https://github.com/rthrfrd/webxx","tags":["c","html","css"],"topics":[{"name":"C++","slug":"c"},{"name":"HTML","slug":"html"},{"name":"CSS","slug":"css"}],"content":"<p>webxx is a C++ library that provides declarative, composable, concise, and fast HTML and CSS components. It allows developers to create HTML-based user interfaces in C++ with ease. </p>\n<p>The library offers a range of features, including the ability to define components, reuse code, and compose different components together. It also provides a scoped CSS feature, where CSS styles defined in a component only apply to the HTML elements within that component.</p>\n<p>To get started with webxx, you can simply download and include the <code>webxx.h</code> file into your project or clone the repository. The library also offers CMake integration for easy integration into your build system.</p>\n<p>webxx prioritizes memory safety and provides a user guide that covers various topics, including components, reusability, composition, and more. It also highlights some quirks and inconsistencies to be aware of when using the library.</p>\n<p>Here&#39;s an example of how to define a component in webxx:</p>\n<pre><code class=\"language-cpp\">#include &lt;webxx.h&gt;\n\nstruct MyComponent : public Webxx::component {\n  void render() {\n    html::div([] {\n      html::text(&quot;Hello, webxx!&quot;);\n    });\n  }\n};\n\nint main() {\n  MyComponent component;\n  component.render();\n  return 0;\n}\n</code></pre>\n<p>With webxx, developers can leverage the power of C++ to build efficient and maintainable HTML-based user interfaces. Stay tuned for more updates and news on this exciting library.</p>\n"}