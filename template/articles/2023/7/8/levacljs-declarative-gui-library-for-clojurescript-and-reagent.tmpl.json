{"layout":"article.njk","title":"Leva.cljs: Declarative GUI Library for ClojureScript and Reagent","date":"2023-07-08T03:00:00.000Z","formattedDate":"2023-7-8","source_link":"https://github.com/mentat-collective/Leva.cljs","tags":["clojure"],"topics":[{"name":"Clojure","slug":"clojure"}],"content":"<p>Leva.cljs is a powerful JavaScript library that allows developers to build declarative GUIs with various input types. From numeric sliders to color pickers and even complex plugins like the Bezier curve example, Leva.cljs provides a wide range of options for creating interactive and beautiful views.</p>\n<p>To make it even more convenient for ClojureScript developers, Leva.cljs offers a set of React/Reagent components that seamlessly integrate with the library. By using these components, developers can easily synchronize the state of their GUI with a ClojureScript atom.</p>\n<p>To get started with Leva.cljs, simply install it into your ClojureScript project using the instructions provided on its Clojars page. Alternatively, you can also grab the most recent code using a Git dependency.</p>\n<p>Once installed, require <code>leva.core</code> in your ClojureScript namespace and declare the state that you want to control with a GUI. Each entry&#39;s key becomes its label, and Leva.cljs automatically infers the correct input type from the value&#39;s type. Pass the atom to the <code>leva/Controls</code> component via the <code>:atom</code> key to add its entries to the Leva panel and establish a bidirectional binding between the GUI state and the interactive state in the panel.</p>\n<p>For more comprehensive guides and examples, refer to the project&#39;s interactive documentation notebook.</p>\n<p>If you&#39;re using Clerk, you&#39;ll be pleased to know that Leva.cljs also offers support for Clerk. The <code>leva/clerk</code> template generates a fully configured Clerk project with Leva.cljs integration for your Clerk notebooks.</p>\n<p>The interactive documentation of this project was created using Nextjournal&#39;s Clerk. To edit or experiment with the documentation, you&#39;ll need to install Clerk and run a specific command. This will open a browser window with the documentation notebook, and any changes you make to <code>dev/leva/notebook.clj</code> will be reflected in real-time.</p>\n<p>Support for Leva.cljs and other open-source projects can be provided by sponsoring the author via their GitHub Sponsors page. Additionally, the creation of this library was made possible with the financial support from Clojurists Together. Consider becoming a member to further support their initiatives.</p>\n<p>Stay up to date with the latest news and developments in the programming language and framework industry by following &quot;Dev Radar&quot; magazine.</p>\n"}