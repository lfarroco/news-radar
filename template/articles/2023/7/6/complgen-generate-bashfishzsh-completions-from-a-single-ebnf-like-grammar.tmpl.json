{"layout":"article.njk","title":"complgen: Generate {bash,fish,zsh} completions from a single EBNF-like grammar","date":"2023-07-06T03:00:00.000Z","formattedDate":"2023-7-6","source_link":"https://github.com/adaszko/complgen/","tags":["rust"],"topics":[{"name":"Rust","slug":"rust"}],"content":"<p>complgen is a powerful tool that allows developers to generate completion scripts for major shells such as bash, fish, and zsh from a single, concise EBNF-like grammar. This tool compiles the grammar into a standalone shell script that can be distributed independently. Additionally, complgen can also produce completions directly on stdout, making it ideal for interactive shells.</p>\n<p>To use complgen, there are two main approaches:</p>\n<ol>\n<li>Generating standalone completion scripts for bash, fish, or zsh.</li>\n<li>Generating completions on stdout by compiling the grammar &quot;just-in-time&quot;.</li>\n</ol>\n<p>The just-in-time mode is designed to integrate with shells, providing completions directly from grammars without the need for compilation and sourcing completion shell script files.</p>\n<p>To integrate complgen with your shell, follow these instructions:</p>\n<p><strong>Bash Integration:</strong>\nAssuming your .usage files are stored in the <code>~/.config/complgen</code> directory, add the following line to your <code>~/.bashrc</code> file:</p>\n<pre><code class=\"language-bash\">source ~/.config/complgen/bash-completions.sh\n</code></pre>\n<p><strong>Fish Integration:</strong>\nAssuming your .usage files are stored in the <code>~/.config/complgen</code> directory, add the following line to your <code>~/.config/fish/config.fish</code> file:</p>\n<pre><code class=\"language-fish\">source ~/.config/complgen/fish-completions.fish\n</code></pre>\n<p><strong>Zsh Integration:</strong>\nAssuming your .usage files are stored in the <code>~/.config/complgen</code> directory, add the following line to your <code>~/.zshrc</code> file:</p>\n<pre><code class=\"language-zsh\">source ~/.config/complgen/zsh-completions.zsh\n</code></pre>\n<p>To install complgen, use the following command:</p>\n<pre><code class=\"language-bash\">npm install -g complgen\n</code></pre>\n<p>For more information on the syntax and usage of complgen, refer to the examples provided in the subdirectory. You can also generate a grammar skeleton quickly by piping through the <code>scrape</code> subcommand.</p>\n<p>complgen is a valuable tool for developers who want to streamline their shell completions and improve their productivity. With its ability to generate completions from a single grammar, complgen simplifies the process of creating and distributing completion scripts across different shells. Stay ahead of the game by incorporating complgen into your development workflow.</p>\n"}