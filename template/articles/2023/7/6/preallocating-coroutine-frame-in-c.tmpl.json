{"layout":"article.njk","title":"Preallocating Coroutine Frame in C++","date":"2023-07-06T03:00:00.000Z","formattedDate":"2023-7-6","source_link":"https://devblogs.microsoft.com/oldnewthing/20230705-00/?p=108392","tags":["c"],"topics":[{"name":"C++","slug":"c"}],"content":"<p>In this article, Raymond Chen explores how to avoid memory allocation failures in C++ coroutines by preallocating the coroutine frame. The coroutine frame consists of various components, and its size can vary depending on the coroutine body. By anticipating the necessary size, developers can preallocate the memory in the caller&#39;s frame, eliminating the need for dynamic allocation. Chen provides insights into calculating the sizes of different components and determining the compiler overhead experimentally. He also demonstrates how to use a custom operator new to pass the preallocated memory to the coroutine function. This technique can help developers optimize memory usage and improve performance in C++ coroutines.</p>\n"}