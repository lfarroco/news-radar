{"layout":"article.njk","title":"CppCon 2022: C++20's Coroutines for Beginners","date":"2023-07-06T03:00:00.000Z","formattedDate":"2023-7-6","source_link":"https://isocpp.org//blog/2023/07/cppcon-2022-cpp20s-coroutines-for-beginners-andreas-fertig","tags":["c","coroutines"],"topics":[{"name":"C++","slug":"c"},{"name":"Coroutines","slug":"coroutines"}],"content":"<p>Andreas Fertig&#39;s talk at CppCon 2022 introduces developers to the new feature in C++20 called coroutines. This talk is perfect for those who are encountering this term for the first time. Fertig starts from the basics, explaining &quot;normal&quot; functions before diving into coroutines. He explores the various customization points that C++ offers, including the new keywords co_await, co_yield, and co_return. Fertig also discusses how to write a generator for a coroutine, as there is no STL part for that in C++20. Additionally, he explains the distinction between cooperative and preemptive multitasking and how coroutines eliminate the need for locks. By the end of the talk, developers will have a solid understanding of coroutines and where they can be used.</p>\n<p>CppCon 2023: Registration Now Open\nRegistration for CppCon 2023 is now open! The conference will take place in person from October 1st in Aurora, Colorado. To get a taste of what to expect, videos of top-rated talks from the previous year&#39;s conference are being shared. Don&#39;t miss out on this opportunity to enhance your C++ knowledge and network with fellow developers. Register today for CppCon 2023!</p>\n<p>Upcoming C++ Conferences\nIn addition to CppCon, there are several other upcoming C++ conferences that developers should keep an eye on. These conferences provide valuable opportunities to learn about the latest advancements in the C++ language and connect with industry experts. Here are a few notable conferences:</p>\n<ul>\n<li>Italian C++ Conference: June 10 in Rome, Italy</li>\n<li>C++ on Sea: June 27-30 in Folkestone, UK</li>\n<li>CppNorth: July 17-19 in Toronto, Canada</li>\n<li>CppIndiaCon: August 5, a virtual event</li>\n</ul>\n<p>Stay tuned for more updates on these conferences and other important events in the C++ community.</p>\n<pre><code class=\"language-cpp\">// Example code demonstrating the use of coroutines in C++20\n#include &lt;iostream&gt;\n#include &lt;experimental/coroutine&gt;\n\nstruct generator {\n    struct promise_type {\n        int current_value;\n        auto get_return_object() { return generator{this}; }\n        auto initial_suspend() { return std::experimental::suspend_always{}; }\n        auto final_suspend() { return std::experimental::suspend_always{}; }\n        void return_void() {}\n        void unhandled_exception() {}\n        auto yield_value(int value) {\n            current_value = value;\n            return std::experimental::suspend_always{};\n        }\n    };\n    \n    generator(promise_type* p) : p(p) {}\n    \n    struct iterator {\n        std::experimental::coroutine_handle&lt;promise_type&gt; h;\n        bool operator!=(const iterator&amp; rhs) const { return !h.done(); }\n        void operator++() { h.resume(); }\n        int operator*() const { return h.promise().current_value; }\n    };\n    \n    iterator begin() {\n        p-&gt;current_value = 0;\n        return {std::experimental::coroutine_handle&lt;promise_type&gt;::from_promise(*p)};\n    }\n    \n    iterator end() { return {nullptr}; }\n    \n    promise_type* p;\n};\n\ngenerator count_to_n(int n) {\n    for (int i = 0; i &lt; n; ++i) {\n        co_yield i;\n    }\n}\n\nint main() {\n    for (int i : count_to_n(5)) {\n        std::cout &lt;&lt; i &lt;&lt; &#39; &#39;;\n    }\n    std::cout &lt;&lt; &#39;\\n&#39;;\n}\n</code></pre>\n<p>CppCon 2022 and the upcoming C++ conferences provide developers with valuable insights into the latest advancements in the C++ language. Whether it&#39;s learning about coroutines in C++20 or exploring other cutting-edge features, these conferences offer a platform for developers to expand their knowledge and network with industry experts. Stay tuned for more updates on the C++ community and make sure to register for CppCon 2023 to be a part of this exciting event.</p>\n"}