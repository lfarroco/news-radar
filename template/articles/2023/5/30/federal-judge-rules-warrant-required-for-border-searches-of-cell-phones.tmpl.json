{"layout":"article.njk","title":"Federal Judge Rules Warrant Required for Border Searches of Cell Phones","date":"2023-05-30T03:00:00.000Z","formattedDate":"2023-5-30","source_link":"https://www.eff.org/deeplinks/2023/05/federal-judge-makes-history-holding-border-searches-cell-phones-require-warrant","tags":["law"],"topics":[{"name":"Law","slug":"law"}],"content":"<p>In a historic ruling, a district court judge in New York has become the first court to require a warrant for cell phone searches at the border, unless there are exigent circumstances. The ruling in United States v. Smith is a significant win for privacy advocates, including the EFF, who have been advocating for a warrant requirement for electronic device searches at the border for almost a decade. The ruling challenges the broad authority of the U.S. Customs &amp; Border Protection (CBP) to conduct warrantless and suspicionless searches of devices at the border, which includes ports of entry at land borders, international airports, and seaports.</p>\n<p>The Supreme Court has long recognized a border search exception to the Fourth Amendment&#39;s warrant requirement, allowing for warrantless and often suspicionless searches of items crossing the border. However, the ruling in United States v. Smith challenges this exception as it applies to electronic devices, which contain vast amounts of personal information. The ruling recognizes the need for a higher standard of protection for cell phones and other electronic devices, which are now an essential part of daily life.</p>\n<p>Developers should be aware of the potential privacy implications of border searches of electronic devices. It is recommended to take precautions such as encrypting sensitive data and storing it in the cloud before traveling internationally. Additionally, developers should stay informed about legal developments related to electronic device searches at the border and advocate for stronger privacy protections. </p>\n<pre><code class=\"language-python\"># Example of encrypting data in Python using the cryptography library\nfrom cryptography.fernet import Fernet\n\n# Generate a key\nkey = Fernet.generate_key()\n\n# Create a Fernet instance with the key\nf = Fernet(key)\n\n# Encrypt data\nencrypted_data = f.encrypt(b&quot;Sensitive data&quot;)\n\n# Decrypt data\ndecrypted_data = f.decrypt(encrypted_data)\n</code></pre>\n"}