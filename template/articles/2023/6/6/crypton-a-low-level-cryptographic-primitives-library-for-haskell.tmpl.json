{"layout":"article.njk","title":"Crypton: A Low-Level Cryptographic Primitives Library for Haskell","date":"2023-06-06T03:00:00.000Z","formattedDate":"2023-6-6","source_link":"https://github.com/kazu-yamamoto/crypton","tags":["cryptography"],"topics":[{"name":"Cryptography","slug":"cryptography"}],"content":"<p>Crypton is a fork of Cryptonite, a Haskell library for cryptographic primitives, with the original author&#39;s permission. It provides a low-level API for various cryptographic algorithms, each with its own specificities that are hard to wrap in common APIs and types. Crypton does not attempt to provide a common ground for algorithms, but instead focuses on providing a non-consistent low-level API.</p>\n<p>Developers should exercise caution when using Crypton, as it is not intended for those who are unfamiliar with cryptographic primitives. Instead, it is recommended to rely on higher-level protocols or implementations. </p>\n<p>The Crypton API is stable, and the library strives to only add new features without changing or removing existing ones. However, some APIs may be revised in extreme cases due to the wide range of exposed internals for power users and flexibility.</p>\n<p>To get started with Crypton, developers can refer to the documentation available on Hackage. The library is licensed under the BSD 3-Clause License. </p>\n<p>Here&#39;s an example of how to use Crypton to generate a random key using the AES-256 algorithm:</p>\n<pre><code class=\"language-haskell\">import Crypto.Cryptonite.AES\n\nmain :: IO ()\nmain = do\n  key &lt;- getRandomBytes 32 -- 256 bits for AES-256\n  putStrLn $ &quot;Random key: &quot; ++ show key\n</code></pre>\n<p>Overall, Crypton is a useful library for developers who need low-level access to cryptographic primitives in Haskell.</p>\n"}