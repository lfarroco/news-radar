{"layout":"article.njk","title":"Castor: A DX Oriented Task Runner and Command Launcher Built with PHP","date":"2023-06-05T03:00:00.000Z","formattedDate":"2023-6-5","source_link":"https://github.com/jolicode/castor","tags":["php","development-tools"],"topics":[{"name":"PHP","slug":"php"},{"name":"Development Tools","slug":"development-tools"}],"content":"<p>Castor is a task runner and command launcher built with PHP by JoliCode. It is designed to simplify development workflows by automating repetitive tasks and providing a simple interface for executing commands.</p>\n<p>One of the key features of Castor is its focus on developer experience (DX). It provides a simple and intuitive API for defining tasks, making it easy to create custom workflows tailored to specific projects. Castor also includes a number of built-in tasks for common tasks like running tests, building assets, and deploying code.</p>\n<p>Castor is built on top of Symfony Console, a popular PHP package for building CLI applications. This makes it easy to integrate with existing Symfony projects, or to use Castor as a standalone tool.</p>\n<p>Here&#39;s an example of a simple Castor task:</p>\n<pre><code class=\"language-php\">use Castor\\Task;\n\nTask::create(&#39;greet&#39;)\n    -&gt;description(&#39;Say hello&#39;)\n    -&gt;run(function () {\n        $name = $this-&gt;ask(&#39;What is your name?&#39;);\n        $this-&gt;writeln(&quot;Hello, $name!&quot;);\n    });\n</code></pre>\n<p>This task prompts the user for their name and then prints a greeting. Castor tasks can also be chained together to create more complex workflows.</p>\n<p>Overall, Castor is a powerful tool for simplifying development workflows and improving developer experience. Its focus on DX and its integration with Symfony make it a great choice for PHP developers looking to streamline their workflows.</p>\n"}