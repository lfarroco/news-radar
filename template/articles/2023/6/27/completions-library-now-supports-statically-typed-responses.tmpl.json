{"layout":"article.njk","title":"Completions library now supports statically typed responses","date":"2023-06-27T03:00:00.000Z","formattedDate":"2023-6-27","source_link":"https://old.reddit.com/r/typescript/comments/14k6jj7/getting_json_with_typescript_types_from_chatgpt/","tags":["typescript"],"topics":[{"name":"TypeScript","slug":"typescript"}],"content":"<p>The completions library has been updated to support statically typed responses. This update allows developers to receive JSON responses with TypeScript types from ChatGPT. The library now generates a prompt that is sent to the API using the &quot;expect&quot; parameter. The prompt contains a schema that the response must satisfy and examples of what the response should look like. </p>\n<p>Here is an example of how to use the updated library:</p>\n<pre><code class=\"language-ts\">const response = await chat.sendMessage(&quot;Suggest a random startup name&quot;, {\n  expect: {\n    examples: [\n      {\n        name: &quot;OpenAI&quot;,\n        domain: &quot;openai.com&quot;,\n      },\n    ],\n    schema: {\n      additionalProperties: false,\n      type: &quot;object&quot;,\n      properties: {\n        name: { type: &quot;string&quot; },\n        domain: { type: &quot;string&quot; },\n      },\n      required: [&quot;name&quot;, &quot;domain&quot;],\n    },\n  },\n});\n\nconsole.log(response.content); // { name: string; domain: string }\n</code></pre>\n<p>The &quot;expect&quot; parameter is used to generate a prompt that is sent to the API. The prompt contains a schema that the response must satisfy and examples of what the response should look like. The library then generates a statically typed response with TypeScript types. </p>\n<p>This update to the completions library is a useful tool for developers who want to receive statically typed JSON responses from ChatGPT. It simplifies the process of generating responses and ensures that the responses are valid.</p>\n"}