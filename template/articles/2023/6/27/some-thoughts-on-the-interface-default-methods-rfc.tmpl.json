{"layout":"article.njk","title":"Some thoughts on the Interface Default Methods RFC","date":"2023-06-27T03:00:00.000Z","formattedDate":"2023-6-27","source_link":"https://old.reddit.com/r/PHP/comments/14k7q5i/some_thoughts_on_the_interface_default_methods_rfc/","tags":["php","java"],"topics":[{"name":"PHP","slug":"php"},{"name":"Java","slug":"java"}],"content":"<p>The Interface Default Methods RFC proposes a new feature for PHP that would allow interfaces to have default method implementations. The author of the RFC, Anthony Ferrara, argues that this feature would make it easier to evolve interfaces over time without breaking existing code that implements them.</p>\n<p>The article shows a video of Ferrara explaining the RFC and its benefits. He gives an example of how this feature could be used to add a new method to an existing interface without breaking any code that implements it. He also addresses some concerns that have been raised about the proposal, such as the potential for abuse and the impact on performance.</p>\n<p>For developers who want to keep up with the latest news in PHP, this RFC is worth following. It has been accepted for PHP 8.0, which is expected to be released in late 2020. Developers can start experimenting with this feature now by using the latest PHP 8.0 alpha releases.</p>\n<p>Here&#39;s an example of how the new feature could be used:</p>\n<pre><code class=\"language-php\">interface MyInterface {\n    public function foo();\n    public function bar() {\n        // Default implementation\n    }\n}\n\nclass MyClass implements MyInterface {\n    public function foo() {\n        // Implementation\n    }\n    // bar() is already implemented by default\n}\n</code></pre>\n<p>Overall, the Interface Default Methods RFC is a promising addition to PHP that could make it easier to write and maintain code over time.</p>\n"}