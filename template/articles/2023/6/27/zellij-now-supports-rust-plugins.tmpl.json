{"layout":"article.njk","title":"Zellij now supports Rust plugins","date":"2023-06-27T03:00:00.000Z","formattedDate":"2023-6-27","source_link":"https://old.reddit.com/r/rust/comments/14k6ukw/come_build_zellij_webassembly_rust_plugins_for/","tags":["rust"],"topics":[{"name":"Rust","slug":"rust"}],"content":"<p>Zellij, a terminal workspace manager, has announced that its plugin system is now ready for Rust developers. The plugin system allows developers to build and share small terminal applets with each other. This new terminal ecosystem provides UI components for the terminal to automate workflows, add a visual element, and enable easy concurrency to pipelines. The Zellij maintainers have overhauled the plugin system over the past few months to provide a better experience for developers. </p>\n<p>Rust developers are invited to join the Zellij community and build plugins for the terminal. The plugin system is built using WebAssembly, which allows for fast and efficient execution of Rust code in the terminal. Developers can express their creativity and imagination while building plugins for the terminal. </p>\n<p>To get started, developers can visit the Zellij website and read more about the new plugin system. The website provides documentation on how to build and share plugins with the community. The Zellij community is active and supportive, making it an excellent place for developers to learn and grow. </p>\n<p>Here is an example of a Rust plugin for Zellij that prints &quot;Hello, world!&quot; in the terminal:</p>\n<pre><code class=\"language-rust\">use zellij_plugin::prelude::*;\n\n#[derive(Default)]\nstruct HelloWorld;\n\nimpl ZellijPlugin for HelloWorld {\n    fn load(&amp;mut self) -&gt; anyhow::Result&lt;()&gt; {\n        println!(&quot;Hello, world!&quot;);\n        Ok(())\n    }\n}\n\ninventory::submit!(PluginDescription {\n    name: &quot;HelloWorld&quot;,\n    author: &quot;Your Name&quot;,\n    description: &quot;Prints &#39;Hello, world!&#39; in the terminal&quot;,\n    version: &quot;0.1.0&quot;,\n    license: &quot;MIT&quot;,\n    features: Default::default(),\n    plugin_type: PluginType::Other(Box::new(|| Box::new(HelloWorld::default()))),\n});\n</code></pre>\n<p>Zellij provides a unique opportunity for Rust developers to build plugins for the terminal and share them with the community. The new plugin system is easy to use and provides a great experience for developers. Join the Zellij community today and start building plugins for the terminal.</p>\n"}