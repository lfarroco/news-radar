{"layout":"article.njk","title":"Introducing @autometa/overloaded: A Library for Simplifying Function and Method Overloads","date":"2023-06-26T03:00:00.000Z","formattedDate":"2023-6-26","source_link":"https://old.reddit.com/r/typescript/comments/14j3e0o/overloaded_function_and_method_overloads_that_are/","tags":["typescript","programming"],"topics":[{"name":"TypeScript","slug":"typescript"},{"name":"Programming","slug":"programming"}],"content":"<p>@autometa/overloaded is a small library that simplifies the creation of function and method overloads. It uses a zod-inspired syntax and ensures that full typings are accurately carried across your overload implementations. It also throws meaningful errors when your arguments don&#39;t match an overload, if no fallback is provided. </p>\n<p>To add @autometa/overloaded to your node project via NPM, simply run:</p>\n<pre><code>npm add @autometa/overloaded\n</code></pre>\n<p>Here&#39;s an example of a function with two overloads:</p>\n<ul>\n<li>Accept two strings, returning the combined string with a newline between</li>\n<li>Accept two numbers, returning the sum of the inputs</li>\n</ul>\n<p>Without using @autometa/overloaded, the solution would look like this:</p>\n<pre><code>function add(a: string, b: string): string;\nfunction add(a: number, b: number): number;\nfunction add(a: string | number, b: string | number): string | number {\n  if (typeof a === &quot;string&quot;) {\n    if (typeof b === &quot;string&quot;) {\n      return a + &quot;\\n&quot; + b;\n    }\n  } else if (typeof a === &quot;number&quot;) {\n    if (typeof b === &quot;number&quot;) {\n      return a + b;\n    }\n  }\n}\n</code></pre>\n<p>Using @autometa/overloaded, the same function can be written like this:</p>\n<pre><code>import { overload } from &quot;@autometa/overloaded&quot;;\n\nconst add = overload({\n  (a: string, b: string) =&gt; a + &quot;\\n&quot; + b,\n  (a: number, b: number) =&gt; a + b,\n});\n</code></pre>\n<p>@autometa/overloaded is not yet released as version 1.0.0, so it may contain bugs or be subject to contract changes. However, it should be mostly stable. For more information and full documentation, visit the NPM link: <a href=\"https://www.npmjs.com/package/@autometa/overloaded\">https://www.npmjs.com/package/@autometa/overloaded</a></p>\n"}